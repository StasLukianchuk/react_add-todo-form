{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserId","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","selectedUser","setSelectedUser","todoTitle","setTodoTitle","titleError","setTitleError","userError","setUserError","handleChange","event","target","value","Number","Error","action","method","onSubmit","preventDefault","newTodo","Math","max","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e34abb0.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC, ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserId(userId: number): User | null {\n  return (usersFromServer.find(user => (user.id === userId)) || null);\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserId(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { id, value } = event.target;\n\n    switch (id) {\n      case 'titleInputForm':\n        setTitleError(false);\n        setTodoTitle(value);\n        break;\n\n      case 'userInputForm':\n        setUserError(false);\n        setSelectedUser(getUserId(Number(value)));\n        break;\n\n      default:\n        throw new Error('error');\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setUserError(true);\n    }\n\n    if (!todoTitle || !selectedUser) {\n      return;\n    }\n\n    const newTodoId = Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n\n    const newTodo: Todo = {\n      id: newTodoId,\n      title: todoTitle,\n      completed: false,\n      userId: selectedUser.id,\n      user: selectedUser,\n    };\n\n    setVisibleTodos([...visibleTodos, newTodo]);\n    setTodoTitle('');\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInputForm\">Title: </label>\n\n          <input\n            type=\"text\"\n            id=\"titleInputForm\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleChange}\n          />\n\n          {titleError && (\n            <span\n              className=\"error\"\n            >\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userInputForm\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userInputForm\"\n            placeholder=\"Choose a user\"\n            value={selectedUser?.id || 0}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}